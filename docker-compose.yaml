version: '3.8'
services:
  database:
    image: postgres:17.4-alpine3.21
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s

  migrate-util:
    image: migrate/migrate
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@database:5432/$POSTGRES_DB?sslmode=disable",
        "up"
      ]

  loadbalancer:
    image: nginx:mainline-alpine3.21
    ports:
      - 8080:80
    volumes:
      - ./templates:/etc/nginx/templates
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - user-service
      - core-service
      - storage-service

  storage-service:
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DB_ADDR=database:5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
    build:
      context: .
      dockerfile: Dockerfile.storage
    expose:
      - "80"

  user-service:
    build:
      context: .
      dockerfile: Dockerfile.user
    expose:
      - "80"

  core-service:
    build:
      context: .
      dockerfile: Dockerfile.core
    expose:
      - "80"

volumes:
  database-data: